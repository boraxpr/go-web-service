basePath: /
definitions:
  handlers.Quotation:
    properties:
      attachment:
        $ref: '#/definitions/sql.NullString'
      createdDate:
        $ref: '#/definitions/sql.NullTime'
      creditDay:
        $ref: '#/definitions/sql.NullInt64'
      currency:
        $ref: '#/definitions/sql.NullString'
      customerID:
        $ref: '#/definitions/sql.NullString'
      customerName:
        $ref: '#/definitions/sql.NullString'
      docNum:
        type: integer
      dueDate:
        $ref: '#/definitions/sql.NullTime'
      grandTotal:
        $ref: '#/definitions/sql.NullFloat64'
      isActive:
        $ref: '#/definitions/sql.NullBool'
      note:
        $ref: '#/definitions/sql.NullString'
      projectName:
        $ref: '#/definitions/sql.NullInt64'
      remark:
        $ref: '#/definitions/sql.NullString'
      running:
        $ref: '#/definitions/sql.NullString'
      status:
        $ref: '#/definitions/sql.NullString'
      updatedAt:
        $ref: '#/definitions/sql.NullTime'
      updatedBy:
        $ref: '#/definitions/sql.NullString'
    type: object
  sql.NullBool:
    properties:
      bool:
        type: boolean
      valid:
        description: Valid is true if Bool is not NULL
        type: boolean
    type: object
  sql.NullFloat64:
    properties:
      float64:
        type: number
      valid:
        description: Valid is true if Float64 is not NULL
        type: boolean
    type: object
  sql.NullInt64:
    properties:
      int64:
        type: integer
      valid:
        description: Valid is true if Int64 is not NULL
        type: boolean
    type: object
  sql.NullString:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
  sql.NullTime:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
info:
  contact: {}
  description: This is a sample server for a Go web service.
  title: Go Web Service API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a session token.
      parameters:
      - description: Secret Key
        in: query
        name: secretKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            type: string
        "400":
          description: Error generating token string
          schema:
            type: string
      summary: User login
  /quotation:
    get:
      consumes:
      - application/json
      description: Returns all quotations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Quotation'
            type: array
      summary: Get all quotations
swagger: "2.0"
